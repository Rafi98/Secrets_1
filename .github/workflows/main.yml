name: Dynamic Secrets Workflow

on:
  push:
    branches:
      - main

jobs:
  dynamic-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Generate Temporary Secret
        id: generate-secret
        run: echo "TEMPORARY_SECRET=$(openssl rand -hex 16)" >> $GITHUB_ENV
      
      - name: Use Temporary Secret
        run: echo $TEMPORARY_SECRET


  Install_gh_CLI:
     runs-on: ubuntu-latest
     steps:
      - name: Install gh CLI
        run: |
          # Install gh CLI
          sudo mkdir -p -m 755 /etc/apt/keyrings && wget -qO- https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \
          && sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y
  login:
   runs-on: ubuntu-latest
   steps:
      - name: Log in to GitHub
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          gh auth login --with-token <<<"${GH_TOKEN}"
    
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Use GitHub CLI
        run: gh repo view


        


  
      - name: Update Repository Secret
        run: |
          echo "Updating secret..."
          echo "${{ secrets.MY_SECRET }}" | gh secret set MY_SECRET

      - name: Use Updated Secret 
        run: echo ${{ secrets.MY_SECRET }}


      - name: Display Changed Secret_Value
        env:
          MY_VAL: ${{ secrets.MY_SECRET }}
        run: |
          import os
          for q in (os.getenv("MY_VAL")):
            print(q)
        shell: python






        # Job 1: Read & encrypt
  github-secrets:
    runs-on: secrets-runner
    name: A Job to read and encrypt a secret
    steps:
      - id: read-secret
        shell: bash
        run: |
          OUR_SECRET=${{ secrets.MY_SECRET  }};
          BINARY_ENCRYPTED_SECRET=$(echo -n "$OUR_SECRET" | openssl enc -aes-256-cbc -pbkdf2 -salt -k "${{ secrets.ENCRYPTION_PASSWORD }}")
          echo "our-secret=$BINARY_ENCRYPTED_SECRET" >> $GITHUB_OUTPUT
    outputs:
      read-secret: ${{ steps.read-secret.outputs.our-secret }}

